# Generated by Django 2.0.5 on 2018-07-17 13:16

import accounts.models
import accounts.validators
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[accounts.validators.email_validator], verbose_name='College Email')),
                ('usn', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(code='usn_err', message='Please enter valid USN.(must be in capital letter)', regex='^1BM\\d{2}[A-Z]{2,3}\\d{3}$')])),
                ('first_name', models.CharField(max_length=30, null=True)),
                ('middle_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('dob', models.DateField(null=True, verbose_name='date of birth')),
                ('batch', models.CharField(choices=[('ISE', 'Information Science Engg.'), ('CSE', 'Computer Science Engg.')], max_length=3, null=True)),
                ('profile_img', models.ImageField(blank=True, null=True, upload_to=accounts.models.upload_image_path)),
                ('year', models.IntegerField(choices=[(2017, 2017), (2018, 2018), (2019, 2019), (2020, 2020)], help_text='Year which you joined the college.', null=True, verbose_name='Year')),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'student',
                'verbose_name_plural': 'students',
            },
        ),
    ]
